Overview of Files:
--- main.tf
--- terraform.tfstate
--- terraform.tfstate.backup: maintains the last tfstate after 'terraform apply' or 'terraform destroy'

Terraform Setup:
--- Provider defines who deploys the resources (AWS / Azure / GCP / Docker / etc)
--- Run 'terraform init' on your 'main.tf' file

Running Terraform:
--- Run 'terraform plan'
--- Run 'terraform apply'
--- Run 'terraform show': shows terraform.tfstate file
--- Run 'terraform state list': shows all resources deployed
--- Run 'terraform console': opens terraform console

Terraform State:
--- Highest serial is the one that is considered when running terraform operations

Terraform Output:
--- Used to print terraform information after 'terraform apply' or from 'terraform output' (must be applied before visible in output)

Terraform Import:
--- Used to take a resource that already exists (for example a container) and map it to terraform code

Terraform Refresh:
--- Doesn't modify the resources, but does change the state. Not recommended workflow
--- Use this when things get out of sync

Terraform Apply -Replace:
--- Forces a resource to be destroyed and recreated on the apply execution

Terraform Init:
--- Get the provider files
--- Store them in .terraform/providers (in current working directory by default)

Terraform Backends:
--- Define where the terraform state comes from
--- Think of this is where the text file lives - s3, consul, locally, etc

Terraform Workspace New <WORKSPACE>:
--- Creates a new workspace

Terraform Workspace Select <WORKSPACE>:
--- Used to switch between workspaces

Terraform Validate:
--- Ensure that there are no syntactical errors with the terraform files

Terraform Fmt:
--- Enforce standard terraform style

TF_LOG - logging level
TF_VAR - prefix for environment variables

Data blocks are used to retrieve external data (APIs/databases/etc) for use in terraform
Terraform is declarative and immutable
Terraform's parallelism configuration defaults to a value of 10
Terraform.tfstate.d --> Workspace --> terraform.tfstate

Defining Variables:
'variables.tf' define the metadata of the variable:
  variable "storage_account_name" {
   type        = string
   description = "Storage account name"
    default     = ""
  }
The assignment of the variables can either be done in 'terraform.tfvars' or in 'main.tf'
  storage_account_name    = "geralexgrsgv2"
  module "storage_account_test" {
    storage_account_name    = "geralexgrsgv2"
  }
The variable can be accessed by:
  var.storage_account_name
